$color-backdrop: rgba(12, 12, 12, 0.96);
$color-backdrop-solid: rgba(12, 12, 12, 1);
$color-toolbar: rgba(0, 0, 0, 0.36);
$color-control: #bebebe;
$color-control-highlight: rgba(200, 200, 200, 0.1);

$transition-appear: all 0.36s ease-out;
$transition-appear: all 0.15s ease-out;

@import "_demo.scss";

body.hg-active {
  overflow: hidden;
  height: 100vh;
  max-height: 100vh;
}

body.hg-show-scrollbar-y {
  overflow-y: visible;
}

.hg-home {}

.hg-backdrop {
  color: $color-control;
  position: fixed;
  display: flex;
  flex-direction: column;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background: $color-backdrop;
  z-index: 1000;
  opacity: 0;
  pointer-events: none;
  transition: $transition-appear;

  body.hg-active & {
    opacity: 1;
    pointer-events: all;
  }

  &.fullscreen {
    background: $color-backdrop-solid;
  }
}

.hg-showpiece-section {
  display: flex;
  align-items: stretch;
  flex: 1;
}

#hg-screen {
  position: relative;
  width: 100%;
  height: 100%;
}

.hg-showpiece-wrapper {
  flex: 1;
  display: flex;
  position: absolute;
  width: 100%;
  height: 100%;
  overflow: hidden;
  align-content: center;
  align-items: center;
  justify-content: center;
  justify-items: center;
}

.hg-loader {
  position: absolute;
  align-self: center;
  margin: auto;
  z-index: 1;
  opacity: 0;
  pointer-events: none;
  transition: $transition-default;
  transition-duration: 1s;
  transition-delay: .5s;
  transform-origin: center;
  animation: hg-loader-rotate 1.2s reverse;
  animation-timing-function: linear;
  animation-iteration-count: infinite;
  
  .hg-showpiece-wrapper.loading & {
    opacity: 1;
  }
  
  .hg-loader-circle {
    animation: hg-loader-fill 3.6s reverse;
    animation-iteration-count: infinite;
    animation-timing-function: ease-in-out;
    transform-origin: center;
  }
}

img.hg-showpiece {
  transition: $transition-default;
  transform: scale(0.8);
  opacity: 0;
  object-fit: scale-down;
  width: 100%;
  height: 100%;
  z-index: 1;

  &.hg-showpiece-current {
    opacity: 1;
    transform: scale(1);
  }
  
  .hg-showpiece-wrapper.loading & {
    transform: scale(0.8);
    // transition-delay: 1s;
    opacity: 0;
  }
}

.hg-control-wrapper {
  display: flex;
  align-items: stretch;
  height: 100%;

  .hg-backdrop.fullscreen & {
    position: absolute;

    &.hg-control-wrapper-l {
      left: 0;
    }

    &.hg-control-wrapper-r {
      right: 0;
    }
  }
}

.hg-control {
  display: flex;
  align-items: center;
  padding: 1em;
  cursor: pointer;
  transition: $transition-default;

  .hg-backdrop.fullscreen & {
    opacity: 0;
  }

  .hg-backdrop.fullscreen .hg-control-wrapper:hover>& {
    opacity: 1;
  }
}

.hg-toolbar-wrapper,
.hg-infobar-wrapper {
  display: flex;
  width: 100%;
  z-index: 1;

  .hg-backdrop.fullscreen & {
    position: absolute;
  }
}

.hg-toolbar-wrapper {
  .hg-backdrop.fullscreen & {
    top: 0;
  }
}

.hg-infobar-wrapper {
  .hg-backdrop.fullscreen & {
    bottom: 0;
  }
}

.hg-toolbar,
.hg-infobar {
  background: $color-toolbar;
  display: flex;
  flex: 1;
  transition: $transition-default;

  .hg-backdrop.fullscreen & {
    opacity: 0;
  }

  .hg-backdrop.fullscreen :hover>& {
    transform: translateY(0%);
    opacity: 1;
  }
}

.hg-toolbar {
  justify-content: flex-end;
  justify-items: flex-end;

  .hg-backdrop.fullscreen & {
    transform: translateY(-100%);
  }
}

.hg-infobar {
  padding: 1em;
  justify-content: center;
  justify-items: center;

  .hg-backdrop.fullscreen & {
    transform: translateY(100%);
  }
}

.hg-toolbar-control {
  padding: 1em;
  cursor: pointer;

  &:hover {
    background: $color-control-highlight;
  }
}

.hg-img-full {}

.hg-img-thumb {}

[data-hg] {
  cursor: pointer;
}



@keyframes hg-loader-fill {
  0% {
    stroke-dasharray: 0 100;
    transform: scaleY(1);
  }

  50% {
    stroke-dasharray: 100 100;
    transform: scaleY(1)
  }

  50.00001% {
    stroke-dasharray: 100 100;
    transform: scaleY(-1)
  }

  100% {
    stroke-dasharray: 0 100;
    transform: scaleY(-1)
  }
}

@keyframes hg-loader-rotate {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
}